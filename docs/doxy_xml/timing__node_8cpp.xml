<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="timing__node_8cpp" kind="file" language="C++">
    <compoundname>timing_node.cpp</compoundname>
    <includes refid="timing__node_8hpp" local="yes">timing_node.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>timing_node.hpp</label>
        <link refid="timing__node_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/log_pkg/src/timing_node.cpp</label>
        <link refid="timing__node_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ecat_msgs/msg/data_received.hpp</label>
      </node>
      <node id="3">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="5">
        <label>rcutils/logging_macros.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="timing__node_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log_pkg/src/timing_node.cpp" line="73" column="5" bodyfile="src/log_pkg/src/timing_node.cpp" bodystart="73" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timing__node_8hpp" kindref="compound">timing_node.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceTiming" kindref="compound">Timing</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">TimingNode::TimingNode()</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>:<sp/>Node(</highlight><highlight class="stringliteral">&quot;timing_node&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>qos<sp/>=<sp/>rclcpp::QoS(rclcpp::KeepLast(1));</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>qos.best_effort();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>received_data_sub_<sp/>=<sp/>this-&gt;create_subscription&lt;ecat_msgs::msg::DataReceived&gt;(</highlight><highlight class="stringliteral">&quot;Slave_Feedback&quot;</highlight><highlight class="normal">,<sp/>qos,<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::bind(&amp;TimingNode::HandleReceivedDataCallback,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::placeholders::_1));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>statistics_timer_<sp/>=<sp/>this-&gt;create_wall_timer(1s,std::bind(&amp;TimingNode::PrintStatistics,</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>received_data_<sp/>=<sp/>std::make_shared&lt;ecat_msgs::msg::DataReceived&gt;();</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal">TimingNode::~TimingNode()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTiming_1_1TimingNode_1ab38ff7099b7ee6864f1097c7f0f726e3" kindref="member">TimingNode::HandleReceivedDataCallback</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ecat_msgs::msg::DataReceived::SharedPtr<sp/>msg)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref><sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classTiming_1_1TimingNode_1a8fb12c62aec8b22ca8713d95932db772" kindref="member">CalculateStatistics</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTiming_1_1TimingNode_1a8fb12c62aec8b22ca8713d95932db772" kindref="member">TimingNode::CalculateStatistics</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;current_lifecycle_state==3u){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classTiming_1_1TimingNode_1aa5a89dbf82f33b18364aa88f14132388" kindref="member">print_begin_</ref>){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;period_ns<sp/>&gt;<sp/><ref refid="classTiming_1_1TimingNode_1a83f9ac4d300115f1933bdc28990a3447" kindref="member">period_max_ns_</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1a83f9ac4d300115f1933bdc28990a3447" kindref="member">period_max_ns_</ref><sp/>=<sp/><ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;period_ns;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;period_ns<sp/>&lt;<sp/><ref refid="classTiming_1_1TimingNode_1af95d06276ecc590d84cb9b8c91731deb" kindref="member">period_min_ns_</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1af95d06276ecc590d84cb9b8c91731deb" kindref="member">period_min_ns_</ref><sp/>=<sp/><ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;period_ns;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;exec_ns<sp/>&gt;<sp/><ref refid="classTiming_1_1TimingNode_1ae739aadbb15d783021464f15050d07eb" kindref="member">exec_max_ns_</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1ae739aadbb15d783021464f15050d07eb" kindref="member">exec_max_ns_</ref><sp/>=<sp/><ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;exec_ns;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;exec_ns<sp/>&lt;<sp/><ref refid="classTiming_1_1TimingNode_1a77344e4eab4d9ceaf349d808b08eb3f7" kindref="member">exec_min_ns_</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1a77344e4eab4d9ceaf349d808b08eb3f7" kindref="member">exec_min_ns_</ref><sp/>=<sp/><ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;exec_ns;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;jitter_ns<sp/>&gt;<sp/><ref refid="classTiming_1_1TimingNode_1a3afad959cbb797f0f97379494b0c19c9" kindref="member">jitter_max_</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1a3afad959cbb797f0f97379494b0c19c9" kindref="member">jitter_max_</ref><sp/>=<sp/><ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;jitter_ns;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;jitter_ns<sp/>&lt;<sp/><ref refid="classTiming_1_1TimingNode_1ab58e3d9e1b29036811789f863b281a6c" kindref="member">jitter_min_</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1ab58e3d9e1b29036811789f863b281a6c" kindref="member">jitter_min_</ref><sp/>=<sp/><ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;jitter_ns;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1a83f9ac4d300115f1933bdc28990a3447" kindref="member">period_max_ns_</ref><sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1af95d06276ecc590d84cb9b8c91731deb" kindref="member">period_min_ns_</ref><sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1ae739aadbb15d783021464f15050d07eb" kindref="member">exec_max_ns_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1a77344e4eab4d9ceaf349d808b08eb3f7" kindref="member">exec_min_ns_</ref><sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1a3afad959cbb797f0f97379494b0c19c9" kindref="member">jitter_max_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1ab58e3d9e1b29036811789f863b281a6c" kindref="member">jitter_min_</ref><sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTiming_1_1TimingNode_1ada1e8c1050d44f73991465c399354c18" kindref="member">TimingNode::PrintStatistics</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classTiming_1_1TimingNode_1ac8f5f06c4d1e5a2dddc00939d96d7354" kindref="member">received_data_</ref>-&gt;current_lifecycle_state==3u){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classTiming_1_1TimingNode_1aa5a89dbf82f33b18364aa88f14132388" kindref="member">print_begin_</ref>){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;Statistics:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>period_min_ns:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="classTiming_1_1TimingNode_1af95d06276ecc590d84cb9b8c91731deb" kindref="member">period_min_ns_</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>period_max_ns:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="classTiming_1_1TimingNode_1a83f9ac4d300115f1933bdc28990a3447" kindref="member">period_max_ns_</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>exec_min_ns:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="classTiming_1_1TimingNode_1a77344e4eab4d9ceaf349d808b08eb3f7" kindref="member">exec_min_ns_</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>exec_max_ns:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="classTiming_1_1TimingNode_1ae739aadbb15d783021464f15050d07eb" kindref="member">exec_max_ns_</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>jitter_min:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="classTiming_1_1TimingNode_1ab58e3d9e1b29036811789f863b281a6c" kindref="member">jitter_min_</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_INFO(this-&gt;get_logger(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>jitter_max:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/><ref refid="classTiming_1_1TimingNode_1a3afad959cbb797f0f97379494b0c19c9" kindref="member">jitter_max_</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1aa5a89dbf82f33b18364aa88f14132388" kindref="member">print_begin_</ref>--;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTiming_1_1TimingNode_1aa5a89dbf82f33b18364aa88f14132388" kindref="member">print_begin_</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="timing__node_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>rclcpp::init(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>rclcpp::spin(std::make_shared&lt;TimingNode&gt;());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>rclcpp::shutdown();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/log_pkg/src/timing_node.cpp"/>
  </compounddef>
</doxygen>
