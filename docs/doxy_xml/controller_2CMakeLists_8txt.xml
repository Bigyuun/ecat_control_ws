<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="controller_2CMakeLists_8txt" kind="file" language="C++">
    <compoundname>CMakeLists.txt</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="controller_2CMakeLists_8txt_1ad1bf69fd353850593e105f63289c8339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cmake_minimum_required</definition>
        <argsstring>(VERSION 3.5) project(controller) if(NOT CMAKE_CXX_STANDARD) set(CMAKE_CXX_STANDARD 14) endif() if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES &quot;Clang&quot;) add_compile_options(-Wall -Wextra -Wpedantic) endif() find_package(ament_cmake REQUIRED) find_package(rclcpp REQUIRED) find_package(sensor_msgs REQUIRED) find_package(rttest) find_package(tlsf_cpp) if($</argsstring>
        <name>cmake_minimum_required</name>
        <param>
          <type>VERSION 3.</type>
          <declname>5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/controller/CMakeLists.txt" line="1" column="1" bodyfile="src/controller/CMakeLists.txt" bodystart="1" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="controller_2CMakeLists_8txt_1ad9a9e945c10fdf0c9b1dadd2f594291f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>STREQUAL Linux</type>
        <definition>STREQUAL Linux include</definition>
        <argsstring>(CheckIncludeFiles) check_include_files(linux/joystick.h HAVE_LINUX_JOYSTICK_H) if(HAVE_LINUX_JOYSTICK_H) add_executable(joy_node src/joy_node_linux.cpp) ament_target_dependencies(joy_node &quot;rclcpp&quot; &quot;sensor_msgs&quot; &quot;tlsf_cpp&quot; &quot;rttest&quot;) install(TARGETS joy_node DESTINATION lib/$</argsstring>
        <name>include</name>
        <param>
          <type>CheckIncludeFiles</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/controller/CMakeLists.txt" line="24" column="3" bodyfile="src/controller/CMakeLists.txt" bodystart="24" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="controller_2CMakeLists_8txt_1a05b3c4a7d379ebcb46cd62d86850f807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>else</definition>
        <argsstring>() message(FATAL_ERROR &quot;no &lt;linux/joystick.h&gt;</argsstring>
        <name>else</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/controller/CMakeLists.txt" line="36" column="3" declfile="src/controller/CMakeLists.txt" declline="36" declcolumn="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"><ref refid="controller_2CMakeLists_8txt_1ad1bf69fd353850593e105f63289c8339" kindref="member">cmake_minimum_required</ref>(VERSION<sp/>3.5)</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">project(controller)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Default<sp/>to<sp/>C++14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NOT<sp/>CMAKE_CXX_STANDARD)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><ref refid="ecat__pkg_2CMakeLists_8txt_1a2e9817741974886b30eed9cfea09cd06" kindref="member">set</ref>(CMAKE_CXX_STANDARD<sp/>14)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">endif()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">if(CMAKE_COMPILER_IS_GNUCXX<sp/>OR<sp/>CMAKE_CXX_COMPILER_ID<sp/>MATCHES<sp/>&quot;Clang&quot;)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/>add_compile_options(-Wall<sp/>-Wextra<sp/>-Wpedantic)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">endif()</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">find_package(ament_cmake<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">find_package(rclcpp<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">find_package(sensor_msgs<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal">find_package(rttest)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">find_package(tlsf_cpp)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>for<sp/>now,<sp/>this<sp/>program<sp/>only<sp/>exists<sp/>for<sp/>Linux<sp/>hosts,<sp/>since<sp/>it<sp/>calls<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>the<sp/>underlying<sp/>joystick<sp/>driver<sp/>provided<sp/>by<sp/>the<sp/>Linux<sp/>kernel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(${CMAKE_SYSTEM_NAME}<sp/>STREQUAL<sp/></highlight><highlight class="stringliteral">&quot;Linux&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>#<sp/>Look<sp/>for<sp/>&lt;linux/joystick.h&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="controller_2CMakeLists_8txt_1ad9a9e945c10fdf0c9b1dadd2f594291f" kindref="member">include</ref>(CheckIncludeFiles)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>check_include_files(linux/joystick.h<sp/>HAVE_LINUX_JOYSTICK_H)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(HAVE_LINUX_JOYSTICK_H)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include_directories(msg/cpp<sp/>${catkin_INCLUDE_DIRS})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>add_executable(joy_node<sp/>src/joy_node_linux.cpp)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>ament_target_dependencies(joy_node</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;rclcpp&quot;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;sensor_msgs&quot;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;tlsf_cpp&quot;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;rttest&quot;)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>install(TARGETS<sp/>joy_node<sp/>DESTINATION<sp/>lib/${PROJECT_NAME})</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>message(FATAL_ERROR<sp/>&quot;no<sp/>&lt;linux/joystick.h&gt;;<sp/>can&apos;t<sp/>build<sp/>joy<sp/>node&quot;)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>endif()</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">endif()</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">ament_package()</highlight></codeline>
    </programlisting>
    <location file="src/controller/CMakeLists.txt"/>
  </compounddef>
</doxygen>
