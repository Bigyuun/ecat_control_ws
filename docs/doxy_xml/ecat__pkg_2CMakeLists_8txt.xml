<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="ecat__pkg_2CMakeLists_8txt" kind="file" language="C++">
    <compoundname>CMakeLists.txt</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ecat__pkg_2CMakeLists_8txt_1a6ea9f23d4cdce36abec9d19975ffc7bf" prot="public" static="no" mutable="no">
        <type>rpath</type>
        <definition>rpath Wl</definition>
        <argsstring></argsstring>
        <name>Wl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/CMakeLists.txt" line="14" column="17" bodyfile="src/ecat_pkg/CMakeLists.txt" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ecat__pkg_2CMakeLists_8txt_1a0d121d952cf7d7860ef1e3398431acd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cmake_minimum_required</definition>
        <argsstring>(VERSION 3.5) project(ecat_pkg) if(NOT CMAKE_C_STANDARD) set(CMAKE_C_STANDARD 99) endif() if(NOT CMAKE_CXX_STANDARD) set(CMAKE_CXX_STANDARD 14) endif() add_compile_options(-g -w -Wall -Wextra -Wpedantic -I/opt/etherlab/include -L/opt/etherlab/lib -lethercat -lpthread -lrt -Wl</argsstring>
        <name>cmake_minimum_required</name>
        <param>
          <type>VERSION 3.</type>
          <declname>5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/CMakeLists.txt" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ecat__pkg_2CMakeLists_8txt_1a2e9817741974886b30eed9cfea09cd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpath opt etherlab lib</type>
        <definition>rpath opt etherlab lib set</definition>
        <argsstring>(etherlab_include/opt/etherlab/include) set(etherlab_lib/opt/etherlab/lib/libethercat.so.1.1.0) set(ecat_node_include $</argsstring>
        <name>set</name>
        <param>
          <type>etherlab_include/opt/etherlab/</type>
          <declname>include</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/CMakeLists.txt" line="17" column="1" bodyfile="src/ecat_pkg/CMakeLists.txt" bodystart="17" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"><ref refid="controller_2CMakeLists_8txt_1ad1bf69fd353850593e105f63289c8339" kindref="member">cmake_minimum_required</ref>(VERSION<sp/>3.5)</highlight></codeline>
<codeline lineno="2"><highlight class="normal">project(ecat_pkg)</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Default<sp/>to<sp/>C99</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NOT<sp/>CMAKE_C_STANDARD)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><ref refid="ecat__pkg_2CMakeLists_8txt_1a2e9817741974886b30eed9cfea09cd06" kindref="member">set</ref>(CMAKE_C_STANDARD<sp/>99)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">endif()</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Default<sp/>to<sp/>C++14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NOT<sp/>CMAKE_CXX_STANDARD)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="ecat__pkg_2CMakeLists_8txt_1a2e9817741974886b30eed9cfea09cd06" kindref="member">set</ref>(CMAKE_CXX_STANDARD<sp/>14)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">endif()</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Compile<sp/>options<sp/>for<sp/>IgH<sp/>libary<sp/>and<sp/>several<sp/>Linux<sp/>libraries<sp/>(e.g<sp/>lpthread)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">add_compile_options(-g<sp/>-w<sp/>-Wall<sp/>-Wextra<sp/>-Wpedantic<sp/>-I/opt/etherlab/<ref refid="controller_2CMakeLists_8txt_1ad9a9e945c10fdf0c9b1dadd2f594291f" kindref="member">include</ref><sp/>-L/opt/etherlab/lib<sp/>-lethercat<sp/>-lpthread<sp/>-lrt<sp/>-<ref refid="ecat__pkg_2CMakeLists_8txt_1a6ea9f23d4cdce36abec9d19975ffc7bf" kindref="member">Wl</ref>,--rpath<sp/>-<ref refid="ecat__pkg_2CMakeLists_8txt_1a6ea9f23d4cdce36abec9d19975ffc7bf" kindref="member">Wl</ref>,/opt/etherlab/lib)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Defining<sp/>paths<sp/>and<sp/>libraries<sp/>to<sp/>include<sp/>in<sp/>the<sp/>next<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="ecat__pkg_2CMakeLists_8txt_1a2e9817741974886b30eed9cfea09cd06" kindref="member">set</ref>(etherlab_include<sp/>/opt/etherlab/<ref refid="controller_2CMakeLists_8txt_1ad9a9e945c10fdf0c9b1dadd2f594291f" kindref="member">include</ref>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="ecat__pkg_2CMakeLists_8txt_1a2e9817741974886b30eed9cfea09cd06" kindref="member">set</ref>(etherlab_lib<sp/>/opt/etherlab/lib/libethercat.so.1.1.0)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="ecat__pkg_2CMakeLists_8txt_1a2e9817741974886b30eed9cfea09cd06" kindref="member">set</ref>(ecat_node_include<sp/>${CMAKE_CURRENT_SOURCE_DIR}/<ref refid="controller_2CMakeLists_8txt_1ad9a9e945c10fdf0c9b1dadd2f594291f" kindref="member">include</ref>/ecat_pkg)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="ecat__pkg_2CMakeLists_8txt_1a2e9817741974886b30eed9cfea09cd06" kindref="member">set</ref>(node_name<sp/></highlight><highlight class="stringliteral">&quot;ecat_node&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Finding<sp/>packages<sp/>that&apos;ll<sp/>be<sp/>required<sp/>for<sp/>compilation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Don&apos;t<sp/>forget<sp/>to<sp/>add<sp/>packages<sp/>if<sp/>you<sp/>use<sp/>it<sp/>in<sp/>your<sp/>code,<sp/>otherwise<sp/>you&apos;ll<sp/>get<sp/>build<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">find_package(ament_cmake<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">find_package(rclcpp<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">find_package(rclcpp_lifecycle<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">find_package(lifecycle_msgs<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">find_package(rttest)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">find_package(tlsf_cpp)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>This<sp/>is<sp/>for<sp/>custom<sp/>msg<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">find_package(ecat_msgs<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>This<sp/>is<sp/>for<sp/>joystick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">find_package(sensor_msgs<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>This<sp/>is<sp/>for<sp/>lifecycle<sp/>node<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">find_package(std_msgs<sp/>REQUIRED)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Output<sp/>executable<sp/>name<sp/>and<sp/>requied<sp/>cpp<sp/>files<sp/>for<sp/>executable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">add_executable(ecat_node<sp/>src/<ref refid="joy__node__linux_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>.cpp</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src/ecat_node.cpp</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src/ecat_slave.cpp</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src/ecat_lifecycle.cpp</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src/timing.cpp)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Specifying<sp/>include<sp/>directories<sp/>for<sp/>ecat_node<sp/>specifically<sp/>by<sp/>using<sp/>definitions<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>target<sp/>include<sp/>directories<sp/>adds<sp/>include<sp/>directory<sp/>for<sp/>specific<sp/>target<sp/>executable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>you<sp/>can<sp/>add<sp/>directory<sp/>in<sp/>this<sp/>way<sp/>or<sp/>you<sp/>can<sp/>use<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include_directories(x/y)<sp/>for<sp/>general<sp/>include<sp/>for<sp/>whole<sp/>project..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">target_include_directories(ecat_node<sp/>PUBLIC</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>$&lt;BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/<ref refid="controller_2CMakeLists_8txt_1ad9a9e945c10fdf0c9b1dadd2f594291f" kindref="member">include</ref>/ecat_pkg&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>$&lt;INSTALL_INTERFACE:include&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>${etherlab_include})</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">##<sp/>Specifying<sp/>libraries<sp/>by<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>definitions<sp/>above.</highlight></codeline>
<codeline lineno="53"><highlight class="normal">target_link_libraries(ecat_node</highlight></codeline>
<codeline lineno="54"><highlight class="normal">${etherlab_lib}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>Add<sp/>include<sp/>directories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include_directories(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>${etherlab_include}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>${ecat_node_include}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">include_directories(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="controller_2CMakeLists_8txt_1ad9a9e945c10fdf0c9b1dadd2f594291f" kindref="member">include</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>${etherlab_include}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>${ecat_node_include}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>${std_msgs_INCLUDE_DIRS}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>${sensor_msgs_INCLUDE_DIRS}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>${lifecycle_msgs_INCLUDE_DIRS}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>${rclcpp_lifecycle_INCLUDE_DIRS}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>${rclcpp_INCLUDE_DIRS}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">##<sp/>Don</highlight><highlight class="stringliteral">&apos;t<sp/>forget<sp/>to<sp/>add<sp/>dependencies<sp/>to<sp/>your<sp/>build<sp/>file,<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral">##<sp/>Use<sp/>find_package(x)<sp/>then<sp/>add<sp/>dependecy<sp/>for<sp/>x.<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral">ament_target_dependencies(${node_name}<sp/><sp/>rclcpp<sp/>rclcpp_lifecycle<sp/>ecat_msgs<sp/>sensor_msgs<sp/>lifecycle_msgs<sp/>std_msgs<sp/>tlsf_cpp)</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral">install(TARGETS<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/>ecat_node</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/>DESTINATION<sp/>lib/${PROJECT_NAME})</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral">ament_package()</highlight></codeline>
    </programlisting>
    <location file="src/ecat_pkg/CMakeLists.txt"/>
  </compounddef>
</doxygen>
