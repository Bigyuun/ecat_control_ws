<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classLifecycleNodeManager" kind="class" language="C++" prot="public">
    <compoundname>LifecycleNodeManager</compoundname>
    <basecompoundref prot="public" virt="non-virtual">rclcpp::Node</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classLifecycleNodeManager_1a581e21d23e48109070dd107ae16e269e" prot="public" static="no" mutable="no">
        <type>rclcpp::Subscription&lt; sensor_msgs::msg::Joy &gt;::SharedPtr</type>
        <definition>rclcpp::Subscription&lt;sensor_msgs::msg::Joy&gt;::SharedPtr LifecycleNodeManager::joystick_subscriber_</definition>
        <argsstring></argsstring>
        <name>joystick_subscriber_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="88" column="41" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLifecycleNodeManager_1ada7b567e41c6273855e5b69928ff3e69" prot="public" static="no" mutable="no">
        <type>rclcpp::Subscription&lt; ecat_msgs::msg::GuiButtonData &gt;::SharedPtr</type>
        <definition>rclcpp::Subscription&lt;ecat_msgs::msg::GuiButtonData&gt;::SharedPtr LifecycleNodeManager::gui_button_subscriber_</definition>
        <argsstring></argsstring>
        <name>gui_button_subscriber_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="89" column="36" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLifecycleNodeManager_1adcbeb4506c68245896a5877d60bde177" prot="public" static="no" mutable="no">
        <type>rclcpp::Subscription&lt; ecat_msgs::msg::DataReceived &gt;::SharedPtr</type>
        <definition>rclcpp::Subscription&lt;ecat_msgs::msg::DataReceived&gt;::SharedPtr LifecycleNodeManager::lifecycle_node_subscriber_</definition>
        <argsstring></argsstring>
        <name>lifecycle_node_subscriber_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="90" column="36" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLifecycleNodeManager_1aeae42c86e356c9bfbb787d7c4acfc2c5" prot="public" static="no" mutable="no">
        <type>ecat_msgs::msg::DataReceived</type>
        <definition>ecat_msgs::msg::DataReceived LifecycleNodeManager::lifecycle_node_data_</definition>
        <argsstring></argsstring>
        <name>lifecycle_node_data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="91" column="32" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLifecycleNodeManager_1a603d3f6d11ee9018d2ca593e3c02f992" prot="public" static="no" mutable="no">
        <type><ref refid="classController" kindref="compound">Controller</ref></type>
        <definition>Controller LifecycleNodeManager::controller_</definition>
        <argsstring></argsstring>
        <name>controller_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="92" column="14" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classLifecycleNodeManager_1af28c2bee450c69abb56a51a00ea488a0" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; rclcpp::Client&lt; lifecycle_msgs::srv::GetState &gt; &gt;</type>
        <definition>std::shared_ptr&lt;rclcpp::Client&lt;lifecycle_msgs::srv::GetState&gt; &gt; LifecycleNodeManager::client_get_state_</definition>
        <argsstring></argsstring>
        <name>client_get_state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="334" column="19" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLifecycleNodeManager_1ae66f3fc1ba1c0bd098b87c8d486b808f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; rclcpp::Client&lt; lifecycle_msgs::srv::ChangeState &gt; &gt;</type>
        <definition>std::shared_ptr&lt;rclcpp::Client&lt;lifecycle_msgs::srv::ChangeState&gt; &gt; LifecycleNodeManager::client_change_state_</definition>
        <argsstring></argsstring>
        <name>client_change_state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="335" column="19" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="335" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLifecycleNodeManager_1a57b3199b608b662cfdf4208dc75a869c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LifecycleNodeManager::LifecycleNodeManager</definition>
        <argsstring>(const std::string &amp;node_name)</argsstring>
        <name>LifecycleNodeManager</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>node_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Subscribtion for control node. Subscribtion for slave feedback values acquired from connected slaves.</para>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="72" column="12" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="72" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classLifecycleNodeManager_1a4063aa04a8a5504ea4f3ab8e80eed43f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LifecycleNodeManager::HandleGuiNodeCallbacks</definition>
        <argsstring>(const ecat_msgs::msg::GuiButtonData::SharedPtr msg)</argsstring>
        <name>HandleGuiNodeCallbacks</name>
        <param>
          <type>const ecat_msgs::msg::GuiButtonData::SharedPtr</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="94" column="3" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="94" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classLifecycleNodeManager_1aa3db673f9e890ab7367a5d0eba9b91f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LifecycleNodeManager::HandleLifecycleNodeCallbacks</definition>
        <argsstring>(const ecat_msgs::msg::DataReceived::SharedPtr msg)</argsstring>
        <name>HandleLifecycleNodeCallbacks</name>
        <param>
          <type>const ecat_msgs::msg::DataReceived::SharedPtr</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="173" column="3" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classLifecycleNodeManager_1a721197b46e8cd5670e0e7e5416e51210" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LifecycleNodeManager::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="178" column="3" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="178" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classLifecycleNodeManager_1ac4ec2c56d5bc6aa831ed71efd1e887bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int LifecycleNodeManager::get_state</definition>
        <argsstring>()</argsstring>
        <name>get_state</name>
        <briefdescription>
<para>Requests the current state of the node. </para>
        </briefdescription>
        <detaileddescription>
<para>In this function, we send a service request asking for the current state of the node ecat_node. If it does return within the given time_out, we return the current state of the node, if not, we return an unknown state. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time_out</parametername>
</parameternamelist>
<parameterdescription>
<para>Duration in seconds specifying how long we wait for a response before returning unknown state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="199" column="3" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="199" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classLifecycleNodeManager_1a01ecceb7259e421c9a35011031038198" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool LifecycleNodeManager::change_state</definition>
        <argsstring>(std::uint8_t transition)</argsstring>
        <name>change_state</name>
        <param>
          <type>std::uint8_t</type>
          <declname>transition</declname>
        </param>
        <briefdescription>
<para>Invokes a transition. </para>
        </briefdescription>
        <detaileddescription>
<para>We send a Service request and indicate that we want to invoke transition with the id &quot;transition&quot;. By default, these transitions are<itemizedlist>
<listitem><para>configure</para>
</listitem><listitem><para>activate</para>
</listitem><listitem><para>cleanup</para>
</listitem><listitem><para>shutdown <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transition</parametername>
</parameternamelist>
<parameterdescription>
<para>id specifying which transition to invoke </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_out</parametername>
</parameternamelist>
<parameterdescription>
<para>Duration in seconds specifying how long we wait for a response before returning unknown state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="293" column="3" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="293" bodyend="331"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>LifecycleNodeManager</label>
        <link refid="classLifecycleNodeManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rclcpp::Node</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Controller</label>
        <link refid="classController"/>
      </node>
      <node id="1">
        <label>LifecycleNodeManager</label>
        <link refid="classLifecycleNodeManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>controller_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>rclcpp::Node</label>
      </node>
    </collaborationgraph>
    <location file="src/ecat_pkg/src/lifecycle_node_manager.cpp" line="69" column="1" bodyfile="src/ecat_pkg/src/lifecycle_node_manager.cpp" bodystart="70" bodyend="336"/>
    <listofallmembers>
      <member refid="classLifecycleNodeManager_1a01ecceb7259e421c9a35011031038198" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>change_state</name></member>
      <member refid="classLifecycleNodeManager_1ae66f3fc1ba1c0bd098b87c8d486b808f" prot="private" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>client_change_state_</name></member>
      <member refid="classLifecycleNodeManager_1af28c2bee450c69abb56a51a00ea488a0" prot="private" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>client_get_state_</name></member>
      <member refid="classLifecycleNodeManager_1a603d3f6d11ee9018d2ca593e3c02f992" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>controller_</name></member>
      <member refid="classLifecycleNodeManager_1ac4ec2c56d5bc6aa831ed71efd1e887bc" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>get_state</name></member>
      <member refid="classLifecycleNodeManager_1ada7b567e41c6273855e5b69928ff3e69" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>gui_button_subscriber_</name></member>
      <member refid="classLifecycleNodeManager_1a4063aa04a8a5504ea4f3ab8e80eed43f" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>HandleGuiNodeCallbacks</name></member>
      <member refid="classLifecycleNodeManager_1aa3db673f9e890ab7367a5d0eba9b91f5" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>HandleLifecycleNodeCallbacks</name></member>
      <member refid="classLifecycleNodeManager_1a721197b46e8cd5670e0e7e5416e51210" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>init</name></member>
      <member refid="classLifecycleNodeManager_1a581e21d23e48109070dd107ae16e269e" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>joystick_subscriber_</name></member>
      <member refid="classLifecycleNodeManager_1aeae42c86e356c9bfbb787d7c4acfc2c5" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>lifecycle_node_data_</name></member>
      <member refid="classLifecycleNodeManager_1adcbeb4506c68245896a5877d60bde177" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>lifecycle_node_subscriber_</name></member>
      <member refid="classLifecycleNodeManager_1a57b3199b608b662cfdf4208dc75a869c" prot="public" virt="non-virtual"><scope>LifecycleNodeManager</scope><name>LifecycleNodeManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
