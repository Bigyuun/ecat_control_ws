-- The C compiler identification is GNU 9.4.0
-- The CXX compiler identification is GNU 9.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found ament_cmake: 0.9.9 (/opt/ros/foxy/share/ament_cmake/cmake)
-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
-- Using PYTHON_EXECUTABLE: /usr/bin/python3
-- Override CMake install command with custom implementation using symlinks instead of copying resources
-- Found rclcpp: 2.4.1 (/opt/ros/foxy/share/rclcpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Found rosidl_adapter: 1.2.1 (/opt/ros/foxy/share/rosidl_adapter/cmake)
-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  
-- Found FastRTPS: /opt/ros/foxy/include  
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 1.0.3 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found sensor_msgs: 2.0.5 (/opt/ros/foxy/share/sensor_msgs/cmake)
-- Found ecat_msgs: 0.0.1 (/home/daeyun/Desktop/ecat_control_ws/install/ecat_msgs/share/ecat_msgs/cmake)
-- Found ament_lint_auto: 0.9.6 (/opt/ros/foxy/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: /home/daeyun/Desktop/ecat_control_ws/src/input_pkg/include/input_pkg;/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/../ecat_pkg/include/ecat_pkg;$<BUILD_INTERFACE:/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/include>
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /home/daeyun/Desktop/ecat_control_ws/build/input_pkg
[35m[1mScanning dependencies of target hapticNode[0m
[ 33%] [32mBuilding CXX object CMakeFiles/hapticNode.dir/src/hapticNode.cpp.o[0m
[ 66%] [32mBuilding CXX object CMakeFiles/hapticNode.dir/src/TCPcomm.cpp.o[0m
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:[m[K In constructor â€˜[01m[KTCPCommunication::TCPServer::TCPServer(int)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:31:39:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kssize_t[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
   31 |     printf("Size of Buffer(server) = [01;35m[K%d[m[K\n", [32m[Kbuffer_size_[m[K);
      |                                      [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~[m[K
      |                                       [01;35m[K|[m[K     [32m[K|[m[K
      |                                       [01;35m[Kint[m[K   [32m[Kssize_t {aka long int}[m[K
      |                                      [32m[K%ld[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:[m[K In constructor â€˜[01m[KTCPCommunication::TCPServer::TCPServer(int, int)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:44:39:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kssize_t[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
   44 |     printf("Size of Buffer(server) = [01;35m[K%d[m[K\n", [32m[Kbuffer_size_[m[K);
      |                                      [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~[m[K
      |                                       [01;35m[K|[m[K     [32m[K|[m[K
      |                                       [01;35m[Kint[m[K   [32m[Kssize_t {aka long int}[m[K
      |                                      [32m[K%ld[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:[m[K In constructor â€˜[01m[KTCPCommunication::TCPServer::TCPServer(int, int, int)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:57:39:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kssize_t[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
   57 |     printf("Size of Buffer(server) = [01;35m[K%d[m[K\n", [32m[Kbuffer_size_[m[K);
      |                                      [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~[m[K
      |                                       [01;35m[K|[m[K     [32m[K|[m[K
      |                                       [01;35m[Kint[m[K   [32m[Kssize_t {aka long int}[m[K
      |                                      [32m[K%ld[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:[m[K In constructor â€˜[01m[KTCPCommunication::TCPClient::TCPClient(const char*, int)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:221:27:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%s[m[Kâ€™ expects argument of type â€˜[01m[Kchar*[m[Kâ€™, but argument 2 has type â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  221 |     printf("IP address : [01;35m[K%s[m[K", IP_address_);
      |                          [01;35m[K~^[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kchar*[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:223:48:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kssize_t[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  223 |     printf("Size of Buffer(client, DEFAULT) = [01;35m[K%d[m[K\n", [32m[Kbuffer_size_[m[K);
      |                                               [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~[m[K
      |                                                [01;35m[K|[m[K     [32m[K|[m[K
      |                                                [01;35m[Kint[m[K   [32m[Kssize_t {aka long int}[m[K
      |                                               [32m[K%ld[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:[m[K In constructor â€˜[01m[KTCPCommunication::TCPClient::TCPClient(const char*, int, int)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:234:27:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%s[m[Kâ€™ expects argument of type â€˜[01m[Kchar*[m[Kâ€™, but argument 2 has type â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  234 |     printf("IP address : [01;35m[K%s[m[K", IP_address_);
      |                          [01;35m[K~^[m[K
      |                           [01;35m[K|[m[K
      |                           [01;35m[Kchar*[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/TCPcomm.cpp:236:39:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 2 has type â€˜[01m[Kssize_t[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
  236 |     printf("Size of Buffer(client) = [01;35m[K%d[m[K\n", [32m[Kbuffer_size_[m[K);
      |                                      [01;35m[K~^[m[K     [32m[K~~~~~~~~~~~~[m[K
      |                                       [01;35m[K|[m[K     [32m[K|[m[K
      |                                       [01;35m[Kint[m[K   [32m[Kssize_t {aka long int}[m[K
      |                                      [32m[K%ld[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:[m[K In constructor â€˜[01m[KHapticNode::HapticNode(char**)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:58:31:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kargv[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   58 | HapticNode::HapticNode([01;35m[Kchar * argv[][m[K) : rclcpp::Node("HapticNode")
      |                        [01;35m[K~~~~~~~^~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:[m[K In member function â€˜[01m[Kvoid HapticNode::commThread()[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:120:22:[m[K [01;35m[Kwarning: [m[Kvariable â€˜[01m[Kstatus[m[Kâ€™ set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
  120 |   std::future_status [01;35m[Kstatus[m[K;
      |                      [01;35m[K^~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:123:14:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kcount[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  123 |   static int [01;35m[Kcount[m[K = 0;
      |              [01;35m[K^~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:[m[K In member function â€˜[01m[Kvoid HapticNode::CommWriteThread(int)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:154:12:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktimestamp[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  154 |     double [01;35m[Ktimestamp[m[K = 0;
      |            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:155:12:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktarget_q[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  155 |     double [01;35m[Ktarget_q[m[K[7] = {0};
      |            [01;35m[K^~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:156:12:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktarget_qd[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  156 |     double [01;35m[Ktarget_qd[m[K[7] = {0};
      |            [01;35m[K^~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:157:12:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktarget_qdd[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  157 |     double [01;35m[Ktarget_qdd[m[K[7] = {0};
      |            [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:158:12:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktarget_current[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  158 |     double [01;35m[Ktarget_current[m[K[7] = {0};
      |            [01;35m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:159:12:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Ktarget_moment[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  159 |     double [01;35m[Ktarget_moment[m[K[7] = {0};
      |            [01;35m[K^~~~~~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:[m[K In member function â€˜[01m[Kvoid HapticNode::CommReadThread(int)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:284:19:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kconst uint32_t[m[Kâ€™ {aka â€˜[01m[Kconst unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  284 |     for(int i=0; [01;35m[Ki<g_kNumberOfServoDrivers[m[K; i++)
      |                  [01;35m[K~^~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:[m[K In member function â€˜[01m[Kvoid HapticNode::DoubleToIntByte(char*, double)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:349:19:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Klong unsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  349 |     for(int i=0; [01;35m[Ki<sizeof(cnvt_double.data_char)[m[K; i++)
      |                  [01;35m[K~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:346:10:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kbuf_data[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
  346 |     char [01;35m[Kbuf_data[m[K[8];
      |          [01;35m[K^~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:[m[K In member function â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> > HapticNode::Parsing(char*, int)[m[Kâ€™:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:410:21:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kconst uint32_t[m[Kâ€™ {aka â€˜[01m[Kconst unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  410 |   for (int i = 0; [01;35m[Ki < g_kNumberOfServoDrivers[m[K; i++)
      |                   [01;35m[K~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:484:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
  484 |     for (int i = 0; [01;35m[Ki < motor_val.size()[m[K; i++)
      |                     [01;35m[K~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:[m[K At global scope:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:123:14:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kcount[m[Kâ€™ defined but not used [[01;35m[K-Wunused-variable[m[K]
  123 |   static int [01;35m[Kcount[m[K = 0;
      |              [01;35m[K^~~~~[m[K
In file included from [01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/../ecat_pkg/include/ecat_pkg/ecat_globals.hpp:42[m[K,
                 from [01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/include/input_pkg/hapticNode.hpp:33[m[K,
                 from [01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/src/hapticNode.cpp:28[m[K:
[01m[K/home/daeyun/Desktop/ecat_control_ws/src/input_pkg/../ecat_pkg/include/ecat_pkg/ecat_definitions.hpp:508:20:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kstd::string GetErrorMessage(const int&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
  508 | static std::string [01;35m[KGetErrorMessage[m[K(const int& err_code)
      |                    [01;35m[K^~~~~~~~~~~~~~~[m[K
[100%] [32m[1mLinking CXX executable hapticNode[0m
[100%] Built target hapticNode
-- Install configuration: ""
-- Execute custom install script
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/lib/input_pkg/hapticNode
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/ament_index/resource_index/package_run_dependencies/input_pkg
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/ament_index/resource_index/parent_prefix_path/input_pkg
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/environment/ament_prefix_path.sh
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/environment/ament_prefix_path.dsv
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/environment/path.sh
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/environment/path.dsv
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/local_setup.bash
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/local_setup.sh
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/local_setup.zsh
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/local_setup.dsv
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/package.dsv
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/ament_index/resource_index/packages/input_pkg
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/cmake/input_pkgConfig.cmake
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/cmake/input_pkgConfig-version.cmake
-- Symlinking: /home/daeyun/Desktop/ecat_control_ws/install/input_pkg/share/input_pkg/package.xml
